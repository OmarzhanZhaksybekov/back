openapi: 3.1.0
info:
  title: Car Dealer API
  description: This is the API documentation for the Car Dealer service.
  version: 1.0.0
servers:
  - url: http://localhost:8001
    description: Main backend server
paths:
  /cars/{id}:
    get:
      summary: Get car by ID
      operationId: getCarById
      tags:
        - Cars
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the car to retrieve
          schema:
            type: string
      responses:
        '200':
          description: A car object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
        '500':
          description: Server error
  /cars:
    get:
      summary: Get all cars
      operationId: getAllCars
      tags:
        - Cars
      responses:
        '200':
          description: A list of cars
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car'
        '500':
          description: Server error
  /admin/add:
    post:
      summary: Add a new car
      operationId: AddCar
      tags:
        - Admin
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      responses:
        '200':
          description: Car added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Identifier of the car
                    example: 1
        '500':
          description: Server error

  /admin/{id}:
    put:
      summary: Edit car properties by ID
      operationId: EditCar
      tags:
        - Admin
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the car to edit
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      responses:
        '200':
          description: Car edited successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Identifier of the car
                    example: 1
        '500':
          description: Server error
    delete:
      summary: Delete car by ID
      operationId: deleteCar
      tags:
        - Admin
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the car to delete
          schema:
            type: string
      responses:
        '200':
          description: Car deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier of the car
                    example: 1
        '500':
          description: Server error
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Car:
      type: object
      required:
        - id
        - brand
        - model
        - image_url
        - year
        - price
        - color
      properties:
        id:
          type: integer
          description: Unique identifier for the car
          example: 17
        brand:
          type: string
          description: The brand of the car
          example: Audi
        model:
          type: string
          description: The model of the car
          example: RS 7
        year:
          type: integer
          description: The year the car was manufactured
          example: 2020
        price:
          type: string
          description: The price of the car
          example: 25 000 000
        color:
          type: string
          description: Color of the car
          example: "orange"
